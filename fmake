#!/usr/bin/env sh

if [ ! -e "fastbuild/linux/fbuild" ]; then
  echo "Not in a Factorio source directory"
  exit 1
fi

fbuild="fastbuild/linux/fbuild -config fastbuild/fbuild.bff"

compiler=${FACTORIO_COMPILER-gcc}

export CC=""
export CXX=""
export AR=""
case "$compiler" in
  GCC)
    CC=$(whereis -b gcc | awk '{ print $2 }')
    CXX=$(whereis -b g++ | awk '{ print $2 }')
    AR=$(whereis -b ar | awk '{ print $2 }')
    ;;
  Clang)
    CC=$(whereis -b clang | awk '{ print $2 }')
    CXX=$(whereis -b clang++ | awk '{ print $2 }')
    AR=$(whereis -b llvm-ar | awk '{ print $2 }')
    ;;
  *)
    echo "Unknown compiler $compiler, expected 'GCC' or 'Clang'"
    exit 1
esac

mode="Debugx64"
type="run"
if [ "$1" = "test" ] || [ "$1" = "without-common-hpp" ] || [ "$1" = "all-in-one" ]; then
  type="$1"
  shift
fi
if [ -n "$1" ]; then
  case $1 in
    compdb)
      $fbuild $compiler-Debugx64-factorio-without-common-hpp $compiler-Debugx64-factorio-test -compdb
      exit
      ;;
    docs)
      shift
      cd scripts/lua_doc
      ./gen-docs.sh "$@"
      cd ../..
      exit
      ;;
    showtargets)
      $fbuild -showtargets
      exit
      ;;
    *)
      parsedmode=$($fbuild -showtargets | grep -i "\b$1" | head -1 | awk -F - '{ print $2 }')
      if [ -n "$parsedmode" ]; then
        mode=$parsedmode
        shift
      fi
      ;;
  esac
fi

threads=$FACTORIO_COMPILE_THREADS
if [ -z "$threads" ]; then
  threads=$(grep -c vendor_id /proc/cpuinfo)
  threads=$(($threads - 2))
fi

if [ "$1" = "--" ]; then
  shift
fi

cmd="$fbuild -j$threads $@ $compiler-$mode-factorio-$type"
echo "$cmd"
$cmd

if [ $? -eq 0 ]; then
  notify-send -h string:x-dunst-stack-tag:compilation -c compilation "Compilation finished"
else
  notify-send -u critical -h string:x-dunst-stack-tag:compilation -c compilation "Compilation failed"
fi
